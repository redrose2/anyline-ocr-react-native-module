apply plugin: "com.android.library"

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 26)
    buildToolsVersion safeExtGet('buildToolsVersion', '27.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 19)
        targetSdkVersion safeExtGet('targetSdkVersion', 27)
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }

    buildTypes {
        debug {

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    packagingOptions {
        pickFirst('lib/*/libgnustl_shared.so')
        pickFirst('lib/*/libopencv_java3.so')
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        url 'https://anylinesdk.blob.core.windows.net/maven/'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.android.support:appcompat-v7:${safeExtGet('supportLibVersion', '26.1.0')}"
    implementation 'io.anyline:anylinesdk:10.1@aar'
    implementation 'com.google.firebase:firebase-ml-vision:19.0.2'
    implementation 'com.google.firebase:firebase-ml-vision-face-model:17.0.2'
    implementation "com.android.support:design:${safeExtGet('supportLibVersion', '26.1.0')}"
    implementation "com.facebook.react:react-native:+"  // From node_modules
}
